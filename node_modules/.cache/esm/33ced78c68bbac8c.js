let express,cors,morgan,bodyParser,router;_68b‍.x([["default",()=>_68b‍.o]]);_68b‍.w("express",[["default",["express"],function(v){express=v}]]);_68b‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_68b‍.w("morgan",[["default",["morgan"],function(v){morgan=v}]]);_68b‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_68b‍.w("../routes/router",[["default",["router"],function(v){router=v}]]);

// import compression from 'compression'



// import { errorHandler as queryErrorHandler } from 'querymen'
// import { errorHandler as bodyErrorHandler } from 'bodymen'
// import { env } from '../../config'

const _68b‍anonymous=(apiRoot) => {
  const app = express()

  /* istanbul ignore next */
  if (process.env === 'production' || process.env === 'development') {
    app.use(cors())
    // app.use(compression())
    app.use(morgan('dev'))
  }

  app.use(bodyParser.urlencoded({ limit: '50mb', extended: false }))
  app.use(bodyParser.json({ limit: '50mb' }))
  app.use(apiRoot, router)
//   app.use(queryErrorHandler())
//   app.use(bodyErrorHandler())

  return app
};_68b‍.d(_68b‍anonymous);